import pathlib
from gen_utils import *
from dk2cxx import *


def format_globals_cpp(globals: list[sgmap.Global]):
  def format_cpp_head():
    yield format_middle(f"warning: file is generated by {pathlib.Path(__file__).name}")
    yield f"#include <dk2_globals.h>"
    yield empty_line
    yield f"using namespace dk2;"
    yield empty_line
  yield from map(format_autogen_line, format_cpp_head())

  def format_cpp_body():
    for glob in filter(filter_global_var, globals):
      glob_type = glob.type
      if is_vtable(glob):
        stru_t = glob.type  # type: sgmap.StructType
        glob_type = sgmap.ArrayType(sgmap.PtrType(sgmap.VoidType()), stru_t.struct.size // 4)
      name = glob.name.replace('::', '_')
      yield f"/*--------*/ relink_glob {format_type(glob_type, '_' + name)};"
      if glob_type.kind is sgmap.TypeKind.Array:
        dk2_name = f'(&dk2::{name})'
      else:
        dk2_name = f'&dk2::{name}'
      yield f"/*{glob.va:08X}*/ {format_type(glob_type, dk2_name)} = {'_' + name};"
  yield from map(format_autogen_line, format_cpp_body())

